status = [['41', '749', '25'], ['38', '780', '30'], ['39', '860', '30'], ['46', '690', '30'], ['37', '980', '30'], ['45', '850', '30'], ['42', '720', '30'], ['48', '490', '30'], ['43', '740', '30'], ['40', '837', '30'], ['49', '585', '20'], ['48', '650', '30'], ['40', '850', '20'], ['46', '800', '30'], ['45', '730', '30'], ['38', '700', '30'], ['44', '700', '50'], ['62', '600', '10'], ['44', '750', '30'], ['44', '650', '40'], ['47', '750', '20'], ['38', '740', '30'], ['36', '750', '25'], ['50', '600', '15'], ['58', '600', '7'], ['42', '600', '20'], ['45', '600', '16'], ['61', '600', '8'], ['61', '600', '8'], ['61', '600', '18'], ['44', '600', '15'], ['48', '600', '13'], ['71', '600', '7'], ['42', '600', '15'], ['51', '600', '12'], ['51', '600', '12'], ['48', '600', '12'], ['60', '600', '10'], ['38', '600', '15'], ['78', '600', '6'], ['40', '600', '15'], ['40', '600', '15'], ['55', '600', '8'], ['47', '600', '16'], ['47', '600', '16'], ['46', '680', '100'], ['37', '850', '50'], ['43', '650', '80'], ['43', '650', '80'], ['41', '720', '150'], ['35', '900', '80'], ['35', '1270', '16'], ['35', '1270', '16'], ['33', '1100', '25'], ['35', '1000', '26'], ['33', '980', '20'], ['33', '980', '20'], ['69', '600', '20'], ['71', '600', '10'], ['69', '600', '20'], ['61', '600', '20'], ['60', '600', '20'], ['50', '600', '10'], ['50', '600', '10'], ['50', '600', '10'], ['50', '600', '10'], ['35', '600', '10'], ['35', '600', '10'], ['35', '600', '10'], ['35', '600', '10'], ['35', '600', '10'], ['35', '600', '10'], ['35', '600', '10'], ['35', '600', '10'], ['35', '600', '10'], ['84', '600', '10'], ['84', '600', '10'], ['84', '600', '10'], ['30', '800', '30'], ['30', '800', '30'], ['30', '800', '30'], ['30', '800', '30'], ['38', '600', '25'], ['27', '800', '30'], ['22', '970', '50'], ['34', '750', '30'], ['32', '900', '30'], ['45', '575', '34'], ['26', '830', '30'], ['36', '550', '30'], ['34', '800', '50'], ['34', '800', '50'], ['21', '1200', '25'], ['28', '900', '30'], ['23', '1080', '40'], ['36', '720', '30'], ['26', '950', '30'], ['33', '700', '31'], ['26', '950', '19']]
names = ['AR33', 'G36C', 'R4-C', '556xi', 'F2', 'AK-12', 'AUG A2', '552 Commando', '416-C Carbine', 'C8-SFW', 'MK17 CQB', 'Para-308', 'Type-89', 'C7E', 'M762', 'Spear .308', 'V308', 'AR-15.50', 'M4', 'AK-74M', 'ARX200', 'F90', 'Commando 9', 'P226 MK 25', 'M45 MEUSOC', '5.7 USG', 'P9', 'LFP586', 'PMM', 'GSH-18', 'P12', 'MMK19mm', 'D-50', 'PRB92', 'Luison', 'P229', 'USP40', 'Q-929', 'RG15', 'KERATOS.357', 'Baliff410', 'P-10C', '1911 TACOPS', '.44 Mag 600', 'SDP 9mm', '6P41', 'G8A1', 'M249', 'T-95 LSW', 'LMG-E', 'ALDA 5.56', 'M249 SAW', 'SMG-11', 'BEARING 9', 'C75 Auto', 'SMG-12', 'SPSMG9', '417', 'Ots-03', 'CAMRS', 'SR-25', 'Mk 14 EBR', 'M590A1', 'M1014', 'SG-CQB', 'SASG-12', 'M870', 'Super 90', 'SPAS-12', 'SPAS-15', 'Supernova', 'ITA12L', 'SIX12 SD', 'SIX12', 'FO-12', 'BOSG.12.2', 'ACS12', 'TCSG12', 'ITA12S', 'Super Shorty', 'MP5K', 'FMG-9', 'UMP45', 'MP5', 'P90', '9x19VSN', 'MP7', '9mm C1', 'MPX', 'M12', 'MP5SD', 'PDW9', 'Vector .45 ACP', 'T-5 SMG', 'Scorpion EVO3 A1', 'K1A', 'Mx4 Storm', 'AUG A3', 'P10 Roni']

def get_real_length_on_CMD(string) :
        count = 0
        for i in range(len(string)) :
            if string[i].encode().isdigit() :
                count += 1
            else :
                if string[i] == "]" or string[i] == "[" or string[i] == ")" or string[i] == "(" or string[i] == " " or string[i] == "." or string[i] == "," or string[i].encode().isalpha():
                    #영어 맞음
                    count += 1
                else :
                    count += 2 
        #print("GRLOC :",count)
        return count

def print_div_6(table) :
    for i in range(len(table)) :
        print(table[i],end="\t")
        if get_real_length_on_CMD(table[i]) < 8 :
            print("\t\t",end="")
        elif get_real_length_on_CMD(table[i]) < 16 :
            print("\t",end="")
    print()

for i in range(len(names)) :
    
    print_div_6([names[i],status[i]])
    #if i % 10 == 0: print(100)

c = open("status.csv","w")
c.write("status")
for i in range(len(status)) :
    c.write("\n"+str(status[i]))
c.close



